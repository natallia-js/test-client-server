{"version":3,"sources":["hooks/http.hook.js","components/ServerMessBlock/index.js","components/App/index.js","index.js"],"names":["HttpError","message","additErrArr","name","errors","Error","ServerMessBlock","useState","tData","setTData","loadDataErr","setLoadDataErr","request","loading","setLoading","error","setError","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","clearError","useHttp","useEffect","then","res","catch","e","className","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAGMA,E,kDACJ,WAAYC,GAA8B,IAAD,EAApBC,EAAoB,uDAAN,KAAM,4BACvC,cAAMD,IACDE,KAAO,YACZ,EAAKC,OAASF,EAHyB,E,sBADnBG,Q,eCEXC,EAAkB,WAAO,IAAD,EACTC,mBAAS,MADA,mBAC5BC,EAD4B,KACrBC,EADqB,OAEGF,mBAAS,MAFZ,mBAE5BG,EAF4B,KAEfC,EAFe,KAI3BC,EDSa,WAAO,IAAD,EACGL,oBAAS,GADZ,mBACpBM,EADoB,KACXC,EADW,OAEDP,mBAAS,MAFR,mBAEpBQ,EAFoB,KAEbC,EAFa,KAyC3B,MAAO,CAAEH,UAASD,QAjCFK,sBAAW,uCAAC,WAAOC,GAAP,mCAAAC,EAAA,6DAAYC,EAAZ,+BAAqB,MAAOC,EAA5B,+BAAmC,KAAMC,EAAzC,+BAAmD,GAC7ER,GAAW,GADe,SAIpBO,IACFA,EAAOE,KAAKC,UAAUH,GACtBC,EAAQ,gBAAkB,oBANJ,SASDG,MAAMP,EAAK,CAAEE,SAAQC,OAAMC,YAT1B,cASlBI,EATkB,iBAULA,EAASC,OAVJ,WAUlBC,EAVkB,OAYnBF,EAASG,GAZU,uBAahB,IAAI7B,EAAU4B,EAAK3B,SAAW,iGAAuB2B,EAAKxB,QAb1C,eAgBxBU,GAAW,GAhBa,kBAkBjBc,GAlBiB,wCAoBxBd,GAAW,GACXE,EAAS,KAAEf,SArBa,+DAAD,sDAwBxB,IASwBc,QAAOe,WAHfb,uBAAY,kBAAMD,EAAS,QAAO,KC/CjCe,GAAZnB,QAeR,OAbAoB,qBAAU,WACRpB,EAAQ,iBAAkB,MAAO,MAC9BqB,MAAK,SAAAC,GACJzB,EAASyB,GACTvB,EAAe,SAEhBwB,OAAM,SAAAC,GACL3B,EAAS,MACTE,EAAeyB,EAAEnC,cAEpB,IAID,qBAAKoC,UAAU,YAAf,SACG7B,GAAgBE,K,MCrBR,SAAS4B,IACtB,OACE,qCACE,iDAGA,cAAC,EAAD,OCNNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,W","file":"static/js/main.d63ce4d9.chunk.js","sourcesContent":["import { useState, useCallback } from 'react';\n\n\nclass HttpError extends Error {\n  constructor(message, additErrArr = null) {\n    super(message);\n    this.name = 'HttpError';\n    this.errors = additErrArr;\n  }\n}\n\n\nexport { HttpError };\n\n\n/**\n * Пользовательский хук для выполнения http-запросов на сервер\n */\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n\n  /**\n   *\n   */\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\n    setLoading(true);\n\n    try {\n      if (body) {\n        body = JSON.stringify(body);\n        headers['Content-Type'] = 'application/json';\n      }\n\n      const response = await fetch(url, { method, body, headers });\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new HttpError(data.message || 'Что-то пошло не так', data.errors);\n      }\n\n      setLoading(false);\n\n      return data;\n    } catch (e) {\n      setLoading(false);\n      setError(e.message);\n      throw e;\n    }\n  }, []);\n\n\n  /**\n   *\n   */\n  const clearError = useCallback(() => setError(null), []);\n\n\n  return { loading, request, error, clearError };\n}\n","import React, { useEffect, useState } from 'react';\nimport { useHttp } from '../../hooks/http.hook';\n\nimport './index.css';\n\nexport const ServerMessBlock = () => {\n  const [tData, setTData] = useState(null);\n  const [loadDataErr, setLoadDataErr] = useState(null);\n\n  const { request } = useHttp();\n\n  useEffect(() => {\n    request('/api/data/info', 'GET', null)\n      .then(res => {\n        setTData(res);\n        setLoadDataErr(null);\n      })\n      .catch(e => {\n        setTData(null);\n        setLoadDataErr(e.message);\n      });\n  }, []);\n\n\n  return (\n    <div className=\"mainBlock\">\n      {tData ? tData : loadDataErr}\n    </div>\n  )\n};\n","import React from 'react';\nimport { ServerMessBlock } from '../ServerMessBlock';\n\nimport './index.css';\n\nexport default function App() {\n  return (\n    <>\n      <h1>\n        Hello, World!!!\n      </h1>\n      <ServerMessBlock />\n    </>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}